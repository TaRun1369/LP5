# -*- coding: utf-8 -*-
"""DL2_k.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1BL5WqGF2GAIxTielCSazD5NXcm34MiE8
"""

import pandas as pd
import numpy as np

data = pd.read_csv("/content/letter-recognition.data",delimiter = ',')

data.head()

data

from sklearn.preprocessing import LabelEncoder
Le = LabelEncoder()

data["T"] = Le.fit_transform(data["T"])

data.isna().sum()

data.head()

from sklearn.model_selection import train_test_split
x = data.drop("T",axis = 1)
y = data["T"]
x_train,x_test,y_train,y_test = train_test_split(x,y,train_size = 0.8)

from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Dense

model =  Sequential()

model.add(Dense(64,activation = "relu"))
model.add(Dense(32,activation = "relu"))
model.add(Dense(26,activation = "softmax"))
model.compile(loss = "sparse_categorical_crossentropy",metrics = ['accuracy'])

model.fit(x_train,y_train,epochs = 150)

model.evaluate(x_test,y_test)

index = 10  # Specify the index of the data point you want to check

# Get the prediction for the specific data point
prediction = model.predict(x_test.iloc[[index]].values.reshape(1, -1))

# Convert prediction to class label
predicted_label = np.argmax(prediction)

# Get the actual value for the data point
actual_value = y_test.iloc[index]

# Print the actual and predicted values
print("Actual value:", actual_value)
print("Predicted value:", predicted_label)

